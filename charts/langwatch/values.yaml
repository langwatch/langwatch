# =============================================================================
# LangWatch Helm Chart Configuration
# =============================================================================
# This file contains all configuration options for deploying LangWatch on Kubernetes.
# Each section is documented with helpful explanations, and links to the Kubernetes
# specification for the resource. Where appropriate, links to the LangWatch documentation
# are also provided.
# =============================================================================

# Global configuration options that apply across all components
# Use this section for settings that should be inherited by multiple services
# If you specify a value here, it will be overridden if a value is set in the
# service-specific section
## @section Global configuration
global:
  ## @param global.env [string, default: production] Deployment environment for all components.
  env: production
  ## @param global.podSecurityContext [object] Default pod security context (applied cluster-wide unless overridden).
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  ## @param global.containerSecurityContext [object] Default container security context (applied cluster-wide unless overridden).
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  ## @extra global.scheduling Global scheduling defaults for all pods.
  ## @param global.scheduling.nodeSelector [object] Node selector labels for all pods.
  ## @param global.scheduling.affinity [object] Affinity rules for all pods.
  ## @param global.scheduling.tolerations [array] Tolerations applied to all pods.
  scheduling:
    nodeSelector: {}
    affinity: {}
    tolerations: []
  ## @extra global.security Security settings for all pods.
  ## @param global.security.allowInsecureImages [boolean] Allow insecure images.
  security:
    # Allow insecure images to deal with Bitnami's overall product deprecation
    allowInsecureImages: true

# =============================================================================
# Auto-Generation Mode (Development Only)
# =============================================================================
# This section enables automatic secret generation for development environments.
# In production, you should manually create and manage secrets.
## @section Auto-generation
autogen:
  # Enable automatic secret generation (set to false in production)
  ## @param autogen.enabled [default: false] Enable automatic secret generation (development only).
  enabled: false
  # Custom secret names for each service (auto-generated if not specified)
  secretNames:
    # Secret name for the main LangWatch application
    ## @param autogen.secretNames.app [string] Secret name for the main LangWatch app (autogenerated if empty).
    app: "" # defaults to {{ .Release.Name }}-app-secrets

# =============================================================================
# Secrets Configuration
# =============================================================================
# Configuration for managing secrets across all LangWatch components
# This section allows you to use existing secrets or define custom key mappings
## @section Secrets
secrets:
  # Reference to an existing secret that contains all required keys
  # If not specified, autogen secrets will be used (when autogen.enabled: true)
  ## @param secrets.existingSecret [string] Name of an existing secret containing required keys.
  existingSecret: ""

  # Custom key mappings for existing secrets
  # These allow you to map LangWatch's expected keys to your existing secret keys
  secretKeys:
    # Key for credentials encryption (used by app)
    ## @param secrets.secretKeys.credentialsEncryptionKey [string] Key name for credentials encryption.
    credentialsEncryptionKey: "credentialsEncryptionKey"

# =============================================================================
# Container Image Configurations
# =============================================================================
# Define the container images for each LangWatch component
# You can override these to use custom images or different tags
## @section Container images
images:
  ## @param images.app.repository [string] App image repository.
  ## @param images.app.tag [string] App image tag.
  ## @param images.app.pullPolicy [string] App image pull policy.
  app:
    repository: langwatch/langwatch
    tag: latest
    pullPolicy: Always
  ## @param images.langwatch_nlp.repository [string] NLP image repository.
  ## @param images.langwatch_nlp.tag [string] NLP image tag.
  ## @param images.langwatch_nlp.pullPolicy [string] NLP image pull policy.
  langwatch_nlp:
    repository: langwatch/langwatch_nlp
    tag: latest
    pullPolicy: Always
  ## @param images.langevals.repository [string] Langevals image repository.
  ## @param images.langevals.tag [string] Langevals image tag.
  ## @param images.langevals.pullPolicy [string] Langevals image pull policy.
  langevals:
    repository: langwatch/langevals
    tag: latest
    pullPolicy: Always

# =============================================================================
# LangWatch Main Application Configuration
# =============================================================================
# Core settings for the main LangWatch application service
## @section LangWatch app
app:
  # Number of application replicas to run
  # See: https://kubespec.dev/apps/v1/Deployment#spec.replicas
  ## @param app.replicaCount [default: 1] Number of application replicas.
  replicaCount: 1

  # Kubernetes service configuration
  # See: https://kubespec.dev/v1/Service
  ## @extra app.service Service configuration for the app.
  ## @param app.service.type [string, default: ClusterIP] Service type.
  ## @param app.service.port [default: 5560] Service port.
  service: { type: ClusterIP, port: 5560 }

  # Resource requirements and limits for the application pods
  # See: https://kubespec.dev/v1/Pod#spec.containers.resources
  ## @extra app.resources Resource requests and limits for the app.
  ## @param app.resources.requests.cpu [string, default: 250m] Requested CPU.
  ## @param app.resources.requests.memory [string, default: 2Gi] Requested memory.
  ## @param app.resources.limits.cpu [string, default: 1000m] CPU limit.
  ## @param app.resources.limits.memory [string, default: 4Gi] Memory limit.
  resources:
    requests: { cpu: 250m, memory: 2Gi }
    limits: { cpu: 1000m, memory: 4Gi }

  # Node.js environment setting, if omitted the `global.env` will be used
  ## @param app.nodeEnv [string] Node.js environment override (falls back to global.env if empty).
  nodeEnv: ""

  # Encryption key for securing sensitive credentials
  # This key is used to encrypt/decrypt stored API keys and secrets
  ## @extra app.credentialsEncryptionKey Configuration for credentials encryption.
  ## @param app.credentialsEncryptionKey.value [string] Encryption key value (not recommended in production).
  ## @param app.credentialsEncryptionKey.secretKeyRef [object] Reference to a secret holding the encryption key.
  credentialsEncryptionKey:
    value: ""
    secretKeyRef: { name: "", key: "" }

  # API key for internal cron job authentication
  # Used by scheduled tasks to authenticate with the application
  ## @extra app.cronApiKey API key used by cron jobs for authentication.
  ## @param app.cronApiKey.value [string] Cron API key value.
  ## @param app.cronApiKey.secretKeyRef [object] Reference to a secret holding the cron API key.
  cronApiKey:
    value: ""
    secretKeyRef: { name: "", key: "" }

  # HTTP configuration for the application
  ## @extra app.http HTTP configuration for base/public URLs.
  ## @param app.http.baseHost [string, default: http://localhost:5560] Internal base URL.
  ## @param app.http.publicUrl [string, default: http://localhost:5560] Public URL for users.
  http:
    # Base host URL for internal communication
    baseHost: "http://localhost:5560"
    # Public URL that users will access the application from
    publicUrl: "http://localhost:5560"

  # Feature flags to enable/disable specific functionality
  ## @extra app.features Feature flags for the app.
  ## @param app.features.skipEnvValidation [default: false] Skip env var validation (dev only).
  ## @param app.features.disablePiiRedaction [default: false] Disable PII redaction.
  ## @param app.features.topicClustering [default: true] Enable automatic topic clustering.
  features:
    # Skip environment variable validation (useful for development)
    skipEnvValidation: false
    # Disable PII (Personally Identifiable Information) redaction
    disablePiiRedaction: false
    # Enable automatic topic clustering for conversations
    topicClustering: true

  # Upstream service connections
  # Define how the main app connects to other LangWatch services
  ## @extra app.upstreams Upstream connections from app to internal services.
  ## @param app.upstreams.nlp.scheme [string, default: http] Scheme for NLP upstream.
  ## @param app.upstreams.nlp.name [string, default: ""] Service name for NLP upstream. If empty, defaults to {{ .Release.Name }}-langwatch-nlp.
  ## @param app.upstreams.nlp.port [default: 5561] Port for NLP upstream.
  ## @param app.upstreams.langevals.scheme [string, default: http] Scheme for Langevals upstream.
  ## @param app.upstreams.langevals.name [string, default: ""] Service name for Langevals upstream. If empty, defaults to {{ .Release.Name }}-langevals.
  ## @param app.upstreams.langevals.port [default: 5562] Port for Langevals upstream.
  upstreams:
    nlp: { scheme: http, port: 5561 }
    langevals: { scheme: http, port: 5562 }
  # AI model evaluator configurations
  # These enable integration with various AI providers for evaluation tasks
  ## @extra app.evaluators Evaluator providers configuration.
  evaluators:
    # Azure OpenAI integration for model evaluation
    ## @extra app.evaluators.azureOpenAI Azure OpenAI evaluator configuration.
    ## @param app.evaluators.azureOpenAI.enabled [default: false] Enable Azure OpenAI evaluator.
    ## @param app.evaluators.azureOpenAI.endpoint.value [string] Azure OpenAI endpoint.
    ## @param app.evaluators.azureOpenAI.apiKey.value [string] Azure OpenAI API key.
    azureOpenAI:
      enabled: false
      endpoint:
        value: ""
        ## @param app.evaluators.azureOpenAI.endpoint.secretKeyRef [object] Secret ref for Azure OpenAI endpoint.
        secretKeyRef: { name: "", key: "" }
      apiKey:
        value: ""
        ## @param app.evaluators.azureOpenAI.apiKey.secretKeyRef [object] Secret ref for Azure OpenAI API key.
        secretKeyRef: { name: "", key: "" }
    # Google AI integration for model evaluation
    ## @extra app.evaluators.google Google evaluator configuration.
    ## @param app.evaluators.google.enabled [default: false] Enable Google evaluator.
    ## @param app.evaluators.google.credentials.value [string] Google credentials JSON (base64 or inline).
    google:
      enabled: false
      credentials:
        value: ""
        ## @param app.evaluators.google.credentials.secretKeyRef [object] Secret ref for Google credentials JSON.
        secretKeyRef: { name: "", key: "" }

  # Dataset storage configuration
  # Controls how LangWatch stores and manages training datasets
  ## @extra app.datasetObjectStorage Object storage configuration for datasets.
  ## @param app.datasetObjectStorage.enabled [default: false] Enable dataset object storage.
  ## @param app.datasetObjectStorage.provider [string, default: awsS3] Object storage provider.
  ## @param app.datasetObjectStorage.bucket [string, default: langwatch-dataset] Bucket name for datasets.
  datasetObjectStorage:
    enabled: false
    # Storage provider to use. Options: awsS3 (default)
    # When set to 'awsS3', enables AWS S3 native integration
    provider: awsS3
    bucket: "langwatch-dataset" # Bucket name for dataset storage

    # Provider-specific configurations
    providers:
      # AWS S3 configuration for dataset storage
      ## @extra app.datasetObjectStorage.providers.awsS3 AWS S3 provider configuration.
      ## @param app.datasetObjectStorage.providers.awsS3.endpoint.value [string] Custom S3 endpoint.
      ## @param app.datasetObjectStorage.providers.awsS3.accessKeyId.value [string] S3 access key ID.
      ## @param app.datasetObjectStorage.providers.awsS3.secretAccessKey.value [string] S3 secret access key.
      ## @param app.datasetObjectStorage.providers.awsS3.keySalt.value [string] Optional key salt.
      awsS3:
        endpoint:
          value: ""
          ## @param app.datasetObjectStorage.providers.awsS3.endpoint.secretKeyRef [object] Secret ref for custom S3 endpoint.
          secretKeyRef: { name: "", key: "" }
        accessKeyId:
          value: ""
          ## @param app.datasetObjectStorage.providers.awsS3.accessKeyId.secretKeyRef [object] Secret ref for S3 access key ID.
          secretKeyRef: { name: "", key: "" }
        secretAccessKey:
          value: ""
          ## @param app.datasetObjectStorage.providers.awsS3.secretAccessKey.secretKeyRef [object] Secret ref for S3 secret access key.
          secretKeyRef: { name: "", key: "" }
        keySalt:
          value: ""
          ## @param app.datasetObjectStorage.providers.awsS3.keySalt.secretKeyRef [object] Secret ref for optional key salt.
          secretKeyRef: { name: "", key: "" }

  # Email notification configuration
  # Enables sending alerts and notifications via email
  ## @extra app.email Email provider configuration.
  ## @param app.email.enabled [default: false] Enable email notifications.
  ## @param app.email.defaultFrom [string] Default "from" address.
  ## @param app.email.provider [string, default: sendgrid] Email provider.
  email:
    enabled: false
    defaultFrom: ""
    # Email provider to use. Options: sendgrid (default)
    # When set to 'sendgrid', enables SendGrid integration
    provider: sendgrid

    providers:
      ## @extra app.email.providers.sendgrid Sendgrid provider configuration.
      ## @param app.email.providers.sendgrid.apiKey.value [string] Sendgrid API key.
      sendgrid:
        apiKey:
          value: ""
          ## @param app.email.providers.sendgrid.apiKey.secretKeyRef [object] Secret ref for SendGrid API key.
          secretKeyRef: { name: "", key: "" }

  # NextAuth.js authentication configuration
  # Handles user authentication and session management
  # Note: publicUrl is automatically used from http.publicUrl
  ## @extra app.nextAuth NextAuth configuration and providers.
  ## @param app.nextAuth.provider [string, default: email] Default auth provider.
  ## @param app.nextAuth.secret.value [string] NextAuth secret value (not recommended inline for production).
  nextAuth:
    # Authentication provider to use. Options: email (default), google, github, gitlab, azureAd, cognito, okta
    # When set to 'email', enables email-based authentication
    # When set to 'google', enables Google OAuth integration
    # When set to 'github', enables GitHub OAuth integration
    # When set to 'gitlab', enables GitLab OAuth integration
    # When set to 'azureAd', enables Azure Active Directory OAuth integration
    # When set to 'cognito', enables AWS Cognito OAuth integration
    # When set to 'okta', enables Okta OAuth integration
    provider: email
    secret:
      value: ""
      ## @param app.nextAuth.secret.secretKeyRef [object] Secret ref for NextAuth secret.
      secretKeyRef: { name: "", key: "" }

    # SSO (Single Sign-On) OAuth provider configurations
    ## @extra app.nextAuth.providers OAuth providers configuration.
    providers:
      # Auth0 OAuth integration
      ## @extra app.nextAuth.providers.auth0 Auth0 OAuth configuration.
      ## @param app.nextAuth.providers.auth0.clientId.value [string] Auth0 client ID.
      ## @param app.nextAuth.providers.auth0.clientSecret.value [string] Auth0 client secret.
      ## @param app.nextAuth.providers.auth0.issuer.value [string] Auth0 issuer URL.
      auth0:
        clientId:
          ## @param app.nextAuth.providers.auth0.clientId.value [string] Auth0 client ID.
          value: ""
          ## @param app.nextAuth.providers.auth0.clientId.secretKeyRef [object] Secret ref for Auth0 client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.auth0.clientSecret.value [string] Auth0 client secret.
          value: ""
          ## @param app.nextAuth.providers.auth0.clientSecret.secretKeyRef [object] Secret ref for Auth0 client secret.
          secretKeyRef: { name: "", key: "" }
        issuer:
          ## @param app.nextAuth.providers.auth0.issuer.value [string] Auth0 issuer URL.
          value: ""
          ## @param app.nextAuth.providers.auth0.issuer.secretKeyRef [object] Secret ref for Auth0 issuer URL.
          secretKeyRef: { name: "", key: "" }
      # Azure Active Directory OAuth integration
      ## @extra app.nextAuth.providers.azureAd Azure AD OAuth configuration.
      azureAd:
        clientId:
          ## @param app.nextAuth.providers.azureAd.clientId.value [string] Azure AD client ID.
          value: ""
          ## @param app.nextAuth.providers.azureAd.clientId.secretKeyRef [object] Secret ref for Azure AD client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.azureAd.clientSecret.value [string] Azure AD client secret.
          value: ""
          ## @param app.nextAuth.providers.azureAd.clientSecret.secretKeyRef [object] Secret ref for Azure AD client secret.
          secretKeyRef: { name: "", key: "" }
        tenantId:
          ## @param app.nextAuth.providers.azureAd.tenantId.value [string] Azure AD tenant ID.
          value: ""
          ## @param app.nextAuth.providers.azureAd.tenantId.secretKeyRef [object] Secret ref for Azure AD tenant ID.
          secretKeyRef: { name: "", key: "" }
      # AWS Cognito OAuth integration
      ## @extra app.nextAuth.providers.cognito AWS Cognito OAuth configuration.
      cognito:
        clientId:
          ## @param app.nextAuth.providers.cognito.clientId.value [string] Cognito client ID.
          value: ""
          ## @param app.nextAuth.providers.cognito.clientId.secretKeyRef [object] Secret ref for Cognito client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.cognito.clientSecret.value [string] Cognito client secret.
          value: ""
          ## @param app.nextAuth.providers.cognito.clientSecret.secretKeyRef [object] Secret ref for Cognito client secret.
          secretKeyRef: { name: "", key: "" }
        issuer:
          ## @param app.nextAuth.providers.cognito.issuer.value [string] Cognito issuer URL.
          value: ""
          ## @param app.nextAuth.providers.cognito.issuer.secretKeyRef [object] Secret ref for Cognito issuer URL.
          secretKeyRef: { name: "", key: "" }
      # GitHub OAuth integration
      ## @extra app.nextAuth.providers.github GitHub OAuth configuration.
      github:
        clientId:
          ## @param app.nextAuth.providers.github.clientId.value [string] GitHub client ID.
          value: ""
          ## @param app.nextAuth.providers.github.clientId.secretKeyRef [object] Secret ref for GitHub client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.github.clientSecret.value [string] GitHub client secret.
          value: ""
          ## @param app.nextAuth.providers.github.clientSecret.secretKeyRef [object] Secret ref for GitHub client secret.
          secretKeyRef: { name: "", key: "" }
      # GitLab OAuth integration
      ## @extra app.nextAuth.providers.gitlab GitLab OAuth configuration.
      gitlab:
        clientId:
          ## @param app.nextAuth.providers.gitlab.clientId.value [string] GitLab client ID.
          value: ""
          ## @param app.nextAuth.providers.gitlab.clientId.secretKeyRef [object] Secret ref for GitLab client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.gitlab.clientSecret.value [string] GitLab client secret.
          value: ""
          ## @param app.nextAuth.providers.gitlab.clientSecret.secretKeyRef [object] Secret ref for GitLab client secret.
          secretKeyRef: { name: "", key: "" }
      # Google OAuth integration
      ## @extra app.nextAuth.providers.google Google OAuth configuration.
      google:
        clientId:
          ## @param app.nextAuth.providers.google.clientId.value [string] Google client ID.
          value: ""
          ## @param app.nextAuth.providers.google.clientId.secretKeyRef [object] Secret ref for Google client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.google.clientSecret.value [string] Google client secret.
          value: ""
          ## @param app.nextAuth.providers.google.clientSecret.secretKeyRef [object] Secret ref for Google client secret.
          secretKeyRef: { name: "", key: "" }
      # Okta OAuth integration
      ## @extra app.nextAuth.providers.okta Okta OAuth configuration.
      okta:
        clientId:
          ## @param app.nextAuth.providers.okta.clientId.value [string] Okta client ID.
          value: ""
          ## @param app.nextAuth.providers.okta.clientId.secretKeyRef [object] Secret ref for Okta client ID.
          secretKeyRef: { name: "", key: "" }
        clientSecret:
          ## @param app.nextAuth.providers.okta.clientSecret.value [string] Okta client secret.
          value: ""
          ## @param app.nextAuth.providers.okta.clientSecret.secretKeyRef [object] Secret ref for Okta client secret.
          secretKeyRef: { name: "", key: "" }
        issuer:
          ## @param app.nextAuth.providers.okta.issuer.value [string] Okta issuer URL.
          value: ""
          ## @param app.nextAuth.providers.okta.issuer.secretKeyRef [object] Secret ref for Okta issuer URL.
          secretKeyRef: { name: "", key: "" }

  # Telemetry and monitoring configuration
  # Controls what metrics and error reporting are enabled
  ## @extra app.telemetry Telemetry configuration.
  telemetry:
    # Usage analytics collection
    ## @extra app.telemetry.usage Usage analytics.
    ## @param app.telemetry.usage.enabled [default: true] Enable anonymous usage analytics.
    usage:
      enabled: true
    # Metrics collection for monitoring
    ## @extra app.telemetry.metrics Metrics configuration.
    ## @param app.telemetry.metrics.enabled [default: false] Enable metrics collection.
    ## @param app.telemetry.metrics.apiKey.value [string] Metrics API key.
    metrics:
      enabled: false
      apiKey:
        value: ""
        ## @param app.telemetry.metrics.apiKey.secretKeyRef [object] Secret ref for metrics API key.
        secretKeyRef: { name: "", key: "" }
    # Sentry error reporting integration
    ## @extra app.telemetry.sentry Sentry error reporting.
    ## @param app.telemetry.sentry.enabled [default: false] Enable Sentry error reporting.
    ## @param app.telemetry.sentry.dsn.value [string] Sentry DSN.
    sentry:
      enabled: false
      dsn:
        value: ""
        ## @param app.telemetry.sentry.dsn.secretKeyRef [object] Secret ref for Sentry DSN.
        secretKeyRef: { name: "", key: "" }

  # =============================================================================
  # Kubernetes Pass-Through Configuration
  # =============================================================================
  # These settings are passed directly to Kubernetes resources
  # Modify these to customize pod behavior, scheduling, and security
  ## @section CronJobs Kubernetes overrides
  ## @section Langevals Kubernetes overrides
  ## @section NLP Kubernetes overrides
  ## @section App Kubernetes overrides

  # Pod security context (user, group, fsGroup, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.securityContext
  ## @param app.podSecurityContext [object] Pod security context overrides for app.
  podSecurityContext: {}
  # Container security context (capabilities, readOnlyRootFilesystem, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.containers.securityContext
  ## @param app.containerSecurityContext [object] Container security context overrides for app.
  containerSecurityContext: {}
  # PodDisruptionBudget pass-through (spec fields)
  # See: https://kubespec.dev/kubernetes/policy/v1/PodDisruptionBudget
  ## @param app.podDisruptionBudget [object] PodDisruptionBudget spec overrides.
  podDisruptionBudget: {}
  # Node selector for pod placement
  # See: https://kubespec.dev/v1/Pod#spec.nodeSelector
  ## @param app.nodeSelector [object] Node selector overrides.
  nodeSelector: {}
  # Tolerations for tainted nodes
  # See: https://kubespec.dev/v1/Pod#spec.tolerations
  ## @param app.tolerations [array] Tolerations overrides.
  tolerations: []
  # Pod affinity and anti-affinity rules
  # See: https://kubespec.dev/v1/Pod#spec.affinity
  ## @param app.affinity [object] Affinity overrides.
  affinity: {}
  # Topology spread constraints for pod distribution
  # See: https://kubespec.dev/v1/Pod#spec.topologySpreadConstraints
  ## @param app.topologySpreadConstraints [array] Topology spread constraints.
  topologySpreadConstraints: []
  # Pod-level configurations
  ## @extra app.pod Pod-level metadata.
  pod:
    # Pod annotations
    # See: https://kubespec.dev/v1/Pod#metadata.annotations
    ## @param app.pod.annotations [object] Additional pod annotations.
    annotations: {}
    # Pod labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param app.pod.labels [object] Additional pod labels.
    labels: {}
  # Deployment-level configurations
  ## @extra app.deployment Deployment-level metadata and strategy.
  deployment:
    # Deployment annotations
    # See: https://kubespec.dev/apps/v1/Deployment#metadata.annotations
    ## @param app.deployment.annotations [object] Additional deployment annotations.
    annotations: {}
    # Deployment labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param app.deployment.labels [object] Additional deployment labels.
    labels: {}
    # Deployment strategy (RollingUpdate, Recreate)
    # See: https://kubespec.dev/apps/v1/Deployment#spec.strategy
    ## @param app.deployment.strategy [object] Deployment strategy overrides.
    strategy: {}
  # Number of old replicasets to retain
  # See: https://kubespec.dev/apps/v1/Deployment#spec.revisionHistoryLimit
  ## @param app.revisionHistoryLimit [default: 10] Number of old replicasets to retain.
  revisionHistoryLimit: 10
  # Additional Kubernetes resources
  # Extra environment variables
  # See: https://kubespec.dev/v1/Pod#spec.containers.env
  ## @param app.extraEnvs [array] Additional environment variables for app container.
  extraEnvs: []
  # Additional containers in the pod
  # See: https://kubespec.dev/v1/Pod#spec.containers
  ## @param app.extraContainers [array] Additional sidecar containers.
  extraContainers: []
  # Additional volumes for the pod
  # See: https://kubespec.dev/v1/Pod#spec.volumes
  ## @param app.extraVolumes [array] Additional pod volumes.
  extraVolumes: []
  # Additional init containers
  # See: https://kubespec.dev/v1/Pod#spec.initContainers
  ## @param app.extraInitContainers [array] Additional init containers.
  extraInitContainers: []

  # Additional lifecycle hook for the LangWatch app container
  # See: https://kubespec.dev/v1/Pod#spec.containers.lifecycle
  ## @param app.extraAppLifecycle [object] Additional lifecycle hooks for app container.
  extraAppLifecycle: {}
  # Additional volume mounts for the LangWatch app container
  # See: https://kubespec.dev/v1/Pod#spec.containers.volumeMounts
  ## @param app.extraAppVolumeMounts [array] Additional volume mounts for app container.
  extraAppVolumeMounts: []

# =============================================================================
# LangWatch NLP Service Configuration
# =============================================================================
# Configuration for the Natural Language Processing service
# This service handles text analysis, embeddings, and language model interactions
## @section NLP service
langwatch_nlp:
  # Number of NLP service replicas
  # See: https://kubespec.dev/apps/v1/Deployment#spec.replicas
  ## @param langwatch_nlp.replicaCount [default: 1] Number of NLP service replicas.
  replicaCount: 1

  # Kubernetes service configuration
  # See: https://kubespec.dev/v1/Service
  ## @extra langwatch_nlp.service Service configuration for NLP.
  ## @param langwatch_nlp.service.type [string, default: ClusterIP] Service type.
  ## @param langwatch_nlp.service.port [default: 5561] Service port.
  service: { type: ClusterIP, port: 5561 }

  # Resource requirements for NLP processing
  # See: https://kubespec.dev/v1/Pod#spec.containers.resources
  ## @extra langwatch_nlp.resources Resource requests and limits.
  ## @param langwatch_nlp.resources.requests.cpu [string, default: 1000m] Requested CPU.
  ## @param langwatch_nlp.resources.requests.memory [string, default: 2Gi] Requested memory.
  ## @param langwatch_nlp.resources.limits.cpu [string, default: 2000m] CPU limit.
  ## @param langwatch_nlp.resources.limits.memory [string, default: 4Gi] Memory limit.
  resources:
    requests: { cpu: 1000m, memory: 2Gi }
    limits: { cpu: 2000m, memory: 4Gi }

  # Connection to the main LangWatch application
  ## @extra langwatch_nlp.upstreams Upstream to app (callbacks, etc.).
  ## @param langwatch_nlp.upstreams.langwatch.scheme [string, default: http] Scheme to app.
  ## @param langwatch_nlp.upstreams.langwatch.name [string, default: langwatch-app] Service name for app.
  ## @param langwatch_nlp.upstreams.langwatch.port [default: 5560] Port to app.
  upstreams:
    langwatch: { scheme: http, port: 5560 }

  # =============================================================================
  # Kubernetes Pass-Through Configuration
  # =============================================================================
  # These settings are passed directly to Kubernetes resources
  # Modify these to customize pod behavior, scheduling, and security

  # Pod security context (user, group, fsGroup, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.securityContext
  ## @param langwatch_nlp.podSecurityContext [object] Pod security context overrides.
  podSecurityContext: {}
  # Container security context (capabilities, readOnlyRootFilesystem, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.containers.securityContext
  ## @param langwatch_nlp.containerSecurityContext [object] Container security context overrides.
  containerSecurityContext: {}
  # PodDisruptionBudget pass-through (spec fields)
  # See: https://kubespec.dev/kubernetes/policy/v1/PodDisruptionBudget
  ## @param langwatch_nlp.podDisruptionBudget [object] PodDisruptionBudget spec overrides.
  podDisruptionBudget: {}
  # Node selector for pod placement
  # See: https://kubespec.dev/v1/Pod#spec.nodeSelector
  ## @param langwatch_nlp.nodeSelector [object] Node selector overrides.
  nodeSelector: {}
  # Tolerations for tainted nodes
  # See: https://kubespec.dev/v1/Pod#spec.tolerations
  ## @param langwatch_nlp.tolerations [array] Tolerations overrides.
  tolerations: []
  # Pod affinity and anti-affinity rules
  # See: https://kubespec.dev/v1/Pod#spec.affinity
  ## @param langwatch_nlp.affinity [object] Affinity overrides.
  affinity: {}
  # Topology spread constraints for pod distribution
  # See: https://kubespec.dev/v1/Pod#spec.topologySpreadConstraints
  ## @param langwatch_nlp.topologySpreadConstraints [array] Topology spread constraints.
  topologySpreadConstraints: []
  # Pod-level configurations
  ## @extra langwatch_nlp.pod Pod-level metadata.
  pod:
    # Pod annotations
    # See: https://kubespec.dev/v1/Pod#metadata.annotations
    ## @param langwatch_nlp.pod.annotations [object] Additional pod annotations.
    annotations: {}
    # Pod labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param langwatch_nlp.pod.labels [object] Additional pod labels.
    labels: {}
  # Deployment-level configurations
  ## @extra langwatch_nlp.deployment Deployment-level metadata and strategy.
  deployment:
    # Deployment annotations
    # See: https://kubespec.dev/apps/v1/Deployment#metadata.annotations
    ## @param langwatch_nlp.deployment.annotations [object] Additional deployment annotations.
    annotations: {}
    # Deployment labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param langwatch_nlp.deployment.labels [object] Additional deployment labels.
    labels: {}
    # Deployment strategy (RollingUpdate, Recreate)
    # See: https://kubespec.dev/apps/v1/Deployment#spec.strategy
    ## @param langwatch_nlp.deployment.strategy [object] Deployment strategy overrides.
    strategy: {}
  # Number of old replicasets to retain
  # See: https://kubespec.dev/apps/v1/Deployment#spec.revisionHistoryLimit
  ## @param langwatch_nlp.revisionHistoryLimit [default: 10] Number of old replicasets to retain.
  revisionHistoryLimit: 10
  # Additional Kubernetes resources
  # Extra environment variables
  # See: https://kubespec.dev/v1/Pod#spec.containers.env
  ## @param langwatch_nlp.extraEnvs [array] Additional environment variables.
  extraEnvs: []
  # Additional containers in the pod
  # See: https://kubespec.dev/v1/Pod#spec.containers
  ## @param langwatch_nlp.extraContainers [array] Additional sidecar containers.
  extraContainers: []
  # Additional volumes for the pod
  # See: https://kubespec.dev/v1/Pod#spec.volumes
  ## @param langwatch_nlp.extraVolumes [array] Additional pod volumes.
  extraVolumes: []
  # Additional init containers
  # See: https://kubespec.dev/v1/Pod#spec.initContainers
  ## @param langwatch_nlp.extraInitContainers [array] Additional init containers.
  extraInitContainers: []

  # Additional lifecycle hook for the LangWatch-NLP container
  # See: https://kubespec.dev/v1/Pod#spec.containers.lifecycle
  ## @param langwatch_nlp.extraNlpLifecycle [object] Additional lifecycle hooks for NLP container.
  extraNlpLifecycle: {}
  # Additional volume mounts for the LangWatch-NLP container
  # See: https://kubespec.dev/v1/Pod#spec.containers.volumeMounts
  ## @param langwatch_nlp.extraNlpVolumeMounts [array] Additional volume mounts for NLP container.
  extraNlpVolumeMounts: []

# =============================================================================
# LangEvals Service Configuration
# =============================================================================
# Configuration for the evaluation service
# This service handles model evaluation, testing, and quality assessment
## @section Langevals service
langevals:
  # Number of evaluation service replicas
  # See: https://kubespec.dev/apps/v1/Deployment#spec.replicas
  ## @param langevals.replicaCount [default: 1] Number of Langevals replicas.
  replicaCount: 1

  # Kubernetes service configuration
  # See: https://kubespec.dev/v1/Service
  ## @extra langevals.service Service configuration for Langevals.
  ## @param langevals.service.type [string, default: ClusterIP] Service type.
  ## @param langevals.service.port [default: 5562] Service port.
  service: { type: ClusterIP, port: 5562 }

  # Resource requirements for evaluation tasks
  # Higher memory requirements due to model loading and evaluation
  # See: https://kubespec.dev/v1/Pod#spec.containers.resources
  ## @extra langevals.resources Resource requests and limits.
  ## @param langevals.resources.requests.cpu [string, default: 1000m] Requested CPU.
  ## @param langevals.resources.requests.memory [string, default: 6Gi] Requested memory.
  ## @param langevals.resources.limits.cpu [string, default: 2000m] CPU limit.
  ## @param langevals.resources.limits.memory [string, default: 8Gi] Memory limit.
  resources:
    requests: { cpu: 1000m, memory: 6Gi }
    limits: { cpu: 2000m, memory: 8Gi }

  # =============================================================================
  # Kubernetes Pass-Through Configuration
  # =============================================================================
  # These settings are passed directly to Kubernetes resources
  # Modify these to customize pod behavior, scheduling, and security

  # Pod security context (user, group, fsGroup, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.securityContext
  ## @param langevals.podSecurityContext [object] Pod security context overrides.
  podSecurityContext: {}
  # Container security context (capabilities, readOnlyRootFilesystem, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.containers.securityContext
  ## @param langevals.containerSecurityContext [object] Container security context overrides.
  containerSecurityContext: {}
  # PodDisruptionBudget pass-through (spec fields)
  # See: https://kubespec.dev/kubernetes/policy/v1/PodDisruptionBudget
  ## @param langevals.podDisruptionBudget [object] PodDisruptionBudget spec overrides.
  podDisruptionBudget: {}
  # Node selector for pod placement
  # See: https://kubespec.dev/v1/Pod#spec.nodeSelector
  ## @param langevals.nodeSelector [object] Node selector overrides.
  nodeSelector: {}
  # Tolerations for tainted nodes
  # See: https://kubespec.dev/v1/Pod#spec.tolerations
  ## @param langevals.tolerations [array] Tolerations overrides.
  tolerations: []
  # Pod affinity and anti-affinity rules
  # See: https://kubespec.dev/v1/Pod#spec.affinity
  ## @param langevals.affinity [object] Affinity overrides.
  affinity: {}
  # Topology spread constraints for pod distribution
  # See: https://kubespec.dev/v1/Pod#spec.topologySpreadConstraints
  ## @param langevals.topologySpreadConstraints [array] Topology spread constraints.
  topologySpreadConstraints: []
  # Pod-level configurations
  ## @extra langevals.pod Pod-level metadata.
  pod:
    # Pod annotations
    # See: https://kubespec.dev/v1/Pod#metadata.annotations
    ## @param langevals.pod.annotations [object] Additional pod annotations.
    annotations: {}
    # Pod labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param langevals.pod.labels [object] Additional pod labels.
    labels: {}
  # Deployment-level configurations
  ## @extra langevals.deployment Deployment-level metadata and strategy.
  deployment:
    # Deployment annotations
    # See: https://kubespec.dev/apps/v1/Deployment#metadata.annotations
    ## @param langevals.deployment.annotations [object] Additional deployment annotations.
    annotations: {}
    # Deployment labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param langevals.deployment.labels [object] Additional deployment labels.
    labels: {}
    # Deployment strategy (RollingUpdate, Recreate)
    # See: https://kubespec.dev/apps/v1/Deployment#spec.strategy
    ## @param langevals.deployment.strategy [object] Deployment strategy overrides.
    strategy: {}
  # Number of old replicasets to retain
  # See: https://kubespec.dev/apps/v1/Deployment#spec.revisionHistoryLimit
  ## @param langevals.revisionHistoryLimit [default: 10] Number of old replicasets to retain.
  revisionHistoryLimit: 10
  # Additional Kubernetes resources
  # Extra environment variables
  # See: https://kubespec.dev/v1/Pod#spec.containers.env
  ## @param langevals.extraEnvs [array] Additional environment variables.
  extraEnvs: []
  # Additional containers in the pod
  # See: https://kubespec.dev/v1/Pod#spec.containers
  ## @param langevals.extraContainers [array] Additional sidecar containers.
  extraContainers: []
  # Additional volumes for the pod
  # See: https://kubespec.dev/v1/Pod#spec.volumes
  ## @param langevals.extraVolumes [array] Additional pod volumes.
  extraVolumes: []
  # Additional init containers
  # See: https://kubespec.dev/v1/Pod#spec.initContainers
  ## @param langevals.extraInitContainers [array] Additional init containers.
  extraInitContainers: []

  # Additional lifecycle hook for the Langevals container
  # See: https://kubespec.dev/v1/Pod#spec.containers.lifecycle
  ## @param langevals.extraLangevalsLifecycle [object] Additional lifecycle hooks.
  extraLangevalsLifecycle: {}
  # Additional volume mounts for the Langevals container
  # See: https://kubespec.dev/v1/Pod#spec.containers.volumeMounts
  ## @param langevals.extraLangevalsVolumeMounts [array] Additional volume mounts.
  extraLangevalsVolumeMounts: []

# =============================================================================
# CronJobs Configuration
# =============================================================================
# Scheduled tasks that run automatically to maintain LangWatch
# These jobs handle data cleanup, clustering, and maintenance tasks
## @section CronJobs
cronjobs:
  # Enable or disable all cron jobs
  ## @param cronjobs.enabled [default: true] Enable all cron jobs.
  enabled: true

  # Container image for the cron job pods
  # See: https://kubespec.dev/batch/v1/CronJob#spec.jobTemplate.spec.template.spec.containers.image
  ## @extra cronjobs.image Cron job image.
  ## @param cronjobs.image.repository [string, default: curlimages/curl] Image repository.
  ## @param cronjobs.image.tag [string, default: latest] Image tag.
  ## @param cronjobs.image.pullPolicy [string, default: IfNotPresent] Image pull policy.
  image:
    repository: curlimages/curl
    tag: latest
    pullPolicy: IfNotPresent

  # Resource requirements for cron job pods
  # See: https://kubespec.dev/v1/Pod#spec.containers.resources
  ## @extra cronjobs.resources Resource requests and limits for jobs.
  ## @param cronjobs.resources.requests.cpu [string, default: 100m] Requested CPU.
  ## @param cronjobs.resources.requests.memory [string, default: 64Mi] Requested memory.
  ## @param cronjobs.resources.limits.cpu [string, default: 100m] CPU limit.
  ## @param cronjobs.resources.limits.memory [string, default: 64Mi] Memory limit.
  resources:
    requests: { cpu: 100m, memory: 64Mi }
    limits: { cpu: 100m, memory: 64Mi }

  # Connection to the main LangWatch application
  ## @extra cronjobs.upstreams Upstream to app for cron endpoints.
  ## @param cronjobs.upstreams.langwatch.name [string, default: langwatch-app] App service name.
  ## @param cronjobs.upstreams.langwatch.port [default: 5560] App service port.
  upstreams:
    langwatch: { name: langwatch-app, port: 5560 }

  # Individual cron job configurations
  ## @extra cronjobs.jobs Individual cron job endpoints and schedules.
  jobs:
    # Topic clustering job - groups conversations by topic
    # See: https://kubespec.dev/batch/v1/CronJob#spec.schedule
    ## @extra cronjobs.jobs.topicClustering Topic clustering job.
    ## @param cronjobs.jobs.topicClustering.enabled [default: true] Enable topic clustering job.
    ## @param cronjobs.jobs.topicClustering.schedule [string, default: 0 0 * * *] Cron schedule.
    ## @param cronjobs.jobs.topicClustering.endpoint [string, default: /api/cron/schedule_topic_clustering] Endpoint path.
    topicClustering:
      enabled: true
      schedule: "0 0 * * *" # At midnight every day
      endpoint: "/api/cron/schedule_topic_clustering"

    # Alert triggers job - checks and fires alerts
    # See: https://kubespec.dev/batch/v1/CronJob#spec.schedule
    ## @extra cronjobs.jobs.alertTriggers Alert triggers job.
    ## @param cronjobs.jobs.alertTriggers.enabled [default: true] Enable alert triggers job.
    ## @param cronjobs.jobs.alertTriggers.schedule [string, default: */3 * * * *] Cron schedule.
    ## @param cronjobs.jobs.alertTriggers.endpoint [string, default: /api/cron/triggers] Endpoint path.
    alertTriggers:
      enabled: true
      schedule: "*/3 * * * *" # Every 3 minutes
      endpoint: "/api/cron/triggers"

    # Data retention cleanup job - removes old trace data
    # See: https://kubespec.dev/batch/v1/CronJob#spec.schedule
    ## @extra cronjobs.jobs.tracesRetentionCleanup Traces retention cleanup job.
    ## @param cronjobs.jobs.tracesRetentionCleanup.enabled [default: true] Enable traces retention cleanup job.
    ## @param cronjobs.jobs.tracesRetentionCleanup.schedule [string, default: 0 1 * * *] Cron schedule.
    ## @param cronjobs.jobs.tracesRetentionCleanup.endpoint [string, default: /api/cron/traces_retention_period_cleanup] Endpoint path.
    tracesRetentionCleanup:
      enabled: true
      schedule: "0 1 * * *" # At 1 AM every day
      endpoint: "/api/cron/traces_retention_period_cleanup"

  # =============================================================================
  # Kubernetes Pass-Through Configuration
  # =============================================================================
  # These settings are passed directly to Kubernetes resources
  # Modify these to customize pod behavior, scheduling, and security

  # Pod security context (user, group, fsGroup, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.securityContext
  ## @param cronjobs.podSecurityContext [object] Pod security context overrides.
  podSecurityContext: {}
  # Container security context (capabilities, readOnlyRootFilesystem, etc.)
  # See: https://kubespec.dev/v1/Pod#spec.containers.securityContext
  ## @param cronjobs.containerSecurityContext [object] Container security context overrides.
  containerSecurityContext: {}
  # PodDisruptionBudget pass-through (spec fields)
  # See: https://kubespec.dev/kubernetes/policy/v1/PodDisruptionBudget
  ## @param cronjobs.podDisruptionBudget [object] PodDisruptionBudget spec overrides.
  podDisruptionBudget: {}
  # Node selector for pod placement
  # See: https://kubespec.dev/v1/Pod#spec.nodeSelector
  ## @param cronjobs.nodeSelector [object] Node selector overrides.
  nodeSelector: {}
  # Tolerations for tainted nodes
  # See: https://kubespec.dev/v1/Pod#spec.tolerations
  ## @param cronjobs.tolerations [array] Tolerations overrides.
  tolerations: []
  # Pod affinity and anti-affinity rules
  # See: https://kubespec.dev/v1/Pod#spec.affinity
  ## @param cronjobs.affinity [object] Affinity overrides.
  affinity: {}
  # Topology spread constraints for pod distribution
  # See: https://kubespec.dev/v1/Pod#spec.topologySpreadConstraints
  ## @param cronjobs.topologySpreadConstraints [array] Topology spread constraints.
  topologySpreadConstraints: []
  # CronJob-level configurations
  ## @extra cronjobs.cronjob CronJob-level metadata.
  cronjob:
    # CronJob annotations
    # See: https://kubespec.dev/batch/v1/CronJob#metadata.annotations
    ## @param cronjobs.cronjob.annotations [object] CronJob annotations.
    annotations: {}
    # CronJob labels
    # See: https://kubespec.dev/batch/v1/CronJob#metadata.labels
    ## @param cronjobs.cronjob.labels [object] CronJob labels.
    labels: {}
  # Deployment-level configurations
  ## @extra cronjobs.job Job-level metadata.
  job:
    # Job annotations
    # See: https://kubespec.dev/batch/v1/Job#metadata.annotations
    ## @param cronjobs.job.annotations [object] Job annotations.
    annotations: {}
    # Job labels
    # See: https://kubespec.dev/batch/v1/Job#metadata.labels
    ## @param cronjobs.job.labels [object] Job labels.
    labels: {}
  # Pod-level configurations
  ## @extra cronjobs.pod Pod-level metadata.
  pod:
    # Pod annotations
    # See: https://kubespec.dev/v1/Pod#metadata.annotations
    ## @param cronjobs.pod.annotations [object] Pod annotations.
    annotations: {}
    # Pod labels
    # See: https://kubespec.dev/v1/Pod#metadata.labels
    ## @param cronjobs.pod.labels [object] Pod labels.
    labels: {}
  # Additional Kubernetes resources
  # Extra environment variables
  # See: https://kubespec.dev/v1/Pod#spec.containers.env
  ## @param cronjobs.extraEnvs [array] Additional environment variables.
  extraEnvs: []
  # Additional containers in the pod
  # See: https://kubespec.dev/v1/Pod#spec.containers
  ## @param cronjobs.extraContainers [array] Additional containers.
  extraContainers: []
  # Additional volumes for the pod
  # See: https://kubespec.dev/v1/Pod#spec.volumes
  ## @param cronjobs.extraVolumes [array] Additional volumes.
  extraVolumes: []
  # Additional init containers
  # See: https://kubespec.dev/v1/Pod#spec.initContainers
  ## @param cronjobs.extraInitContainers [array] Additional init containers.
  extraInitContainers: []

  # Additional lifecycle hook for the CronJobs container
  # See: https://kubespec.dev/v1/Pod#spec.containers.lifecycle
  ## @param cronjobs.extraCronjobsLifecycle [object] Additional lifecycle hooks for cron job container.
  extraCronjobsLifecycle: {}

# =============================================================================
# Ingress Configuration
# =============================================================================
# Kubernetes Ingress resource for external access to LangWatch
# Configure this to expose the application outside the cluster
## @section Ingress
ingress:
  # Enable or disable the ingress
  ## @param ingress.enabled [default: false] Enable ingress.
  enabled: false

  # Ingress class name (e.g., nginx, traefik)
  # See: https://kubespec.dev/networking.k8s.io/v1/Ingress#spec.ingressClassName
  ## @param ingress.className [string] Ingress class name (e.g., nginx, traefik).
  className: ""

  # Ingress annotations for specific behaviors
  # See: https://kubespec.dev/networking.k8s.io/v1/Ingress#metadata.annotations
  ## @param ingress.annotations [object] Additional ingress annotations.
  annotations: {}

  # Host configurations for routing
  # See: https://kubespec.dev/networking.k8s.io/v1/Ingress#spec.rules
  ## @param ingress.hosts [array] Ingress hosts and paths.
  hosts:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: "langwatch-app"
                port:
                  number: 5560

  # TLS configuration for HTTPS
  # See: https://kubespec.dev/networking.k8s.io/v1/Ingress#spec.tls
  ## @param ingress.tls [array] TLS configuration for HTTPS.
  tls: []

# =============================================================================
# System Dependencies Configuration
# =============================================================================
# External services and infrastructure components
# These can be managed by the chart or connected to existing instances

# =============================================================================
# Prometheus Monitoring Configuration
# =============================================================================
# Prometheus metrics collection and monitoring
# If `app.telemetry.metrics.enabled: false`, Prometheus will be disabled
## @section Prometheus
prometheus:
  # Whether to manage Prometheus via this chart or use external instance
  ## @param prometheus.chartManaged [default: true] Manage Prometheus via this chart.
  chartManaged: true

  # External Prometheus configuration (when chartManaged: false)
  external:
    # Reference to existing secret containing connection details
    # See: https://kubespec.dev/v1/Secret
    ## @param prometheus.external.existingSecret [string] Existing secret with connection details.
    existingSecret: ""
    secretKeys:
      ## @param prometheus.external.secretKeys.host [string] Secret key for host.
      host: "host"
      ## @param prometheus.external.secretKeys.port [string] Secret key for port.
      port: "port"
      ## @param prometheus.external.secretKeys.username [string] Secret key for username (optional).
      username: "username" # Optional for basic auth
      ## @param prometheus.external.secretKeys.password [string] Secret key for password (optional).
      password: "password" # Optional for basic auth
      # Optional: full connection string
      ## @param prometheus.external.secretKeys.connectionString [string] Secret key for connection string.
      connectionString: "connection-string"

  image:
    # Use the legacy image to deal with Bitnami's overall product deprecation
    repository: bitnamilegacy/prometheus

  version: 2.1.23

  # Alertmanager configuration for alert routing
  # See: https://kubespec.dev/v1/ConfigMap
  ## @param prometheus.alertmanager.enabled [default: false] Enable Alertmanager.
  alertmanager:
    enabled: false

  # Pushgateway for batch job metrics
  # See: https://kubespec.dev/v1/Service
  ## @param prometheus.pushgateway.enabled [default: false] Enable Pushgateway.
  pushgateway:
    enabled: false

  # Prometheus server configuration
  server:
    # Number of Prometheus replicas
    # See: https://kubespec.dev/apps/v1/Deployment#spec.replicas
    ## @param prometheus.server.replicaCount [default: 1] Number of Prometheus replicas.
    replicaCount: 1

    # Global Prometheus configuration
    ## @extra prometheus.server.global Global scrape/evaluation intervals.
    ## @param prometheus.server.global.scrape_interval [string, default: 15s] Scrape interval.
    ## @param prometheus.server.global.evaluation_interval [string, default: 15s] Evaluation interval.
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    # Persistent storage configuration
    # See: https://kubespec.dev/v1/PersistentVolumeClaim
    ## @extra prometheus.server.persistence Persistent storage configuration.
    ## @param prometheus.server.persistence.enabled [default: true] Enable persistence.
    ## @param prometheus.server.persistence.size [string, default: 6Gi] PVC size.
    ## @param prometheus.server.persistence.storageClass [string] Storage class name.
    persistence:
      enabled: true
      size: 6Gi
      storageClass: ""

    # Data retention period
    ## @param prometheus.server.retention [string, default: 60d] Data retention period.
    retention: 60d

    # Resource requirements for Prometheus
    # See: https://kubespec.dev/v1/Pod#spec.containers.resources
    ## @extra prometheus.server.resources Resource requests and limits.
    ## @param prometheus.server.resources.requests.cpu [string, default: 200m] Requested CPU.
    ## @param prometheus.server.resources.requests.memory [string, default: 512Mi] Requested memory.
    ## @param prometheus.server.resources.limits.cpu [string, default: 500m] CPU limit.
    ## @param prometheus.server.resources.limits.memory [string, default: 2Gi] Memory limit.
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 2Gi

    # Role-based access control configuration
    # See: https://kubespec.dev/rbac.authorization.k8s.io/v1/ClusterRole
    ## @extra prometheus.server.rbac RBAC settings for Prometheus.
    ## @param prometheus.server.rbac.create [default: true] Create RBAC resources.
    ## @param prometheus.server.rbac.includeDefaultRules [default: true] Include default RBAC rules.
    rbac:
      create: true
      includeDefaultRules: true

    # Service account configuration
    # See: https://kubespec.dev/v1/ServiceAccount
    ## @extra prometheus.server.serviceAccount ServiceAccount settings.
    ## @param prometheus.server.serviceAccount.create [default: true] Create a dedicated ServiceAccount.
    serviceAccount:
      create: true

    # Service configuration
    # See: https://kubespec.dev/v1/Service
    ## @extra prometheus.server.service Service configuration.
    ## @param prometheus.server.service.type [string, default: ClusterIP] Service type.
    ## @param prometheus.server.service.port [default: 9090] Service port.
    service:
      type: ClusterIP
      port: 9090

    # Security context for the Prometheus container
    # See: https://kubespec.dev/v1/Pod#spec.containers.securityContext
    ## @extra prometheus.server.securityContext Security context for Prometheus container.
    ## @param prometheus.server.securityContext.runAsNonRoot [default: true] Run as non-root user.
    ## @param prometheus.server.securityContext.runAsUser [default: 65534] User ID.
    ## @param prometheus.server.securityContext.fsGroup [default: 65534] FS group ID.
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534

# =============================================================================
# PostgreSQL Database Configuration
# =============================================================================
# Primary database for LangWatch application data
## @section PostgreSQL
postgresql:
  # Whether to manage PostgreSQL via this chart or use external instance
  ## @param postgresql.chartManaged [default: true] Manage PostgreSQL via this chart.
  chartManaged: true

  # Connection string to use for PostgreSQL when running in `chartManaged: false` mode
  external:
    connectionString:
      ## @param postgresql.external.connectionString.value [string] External PostgreSQL connection string.
      value: ""
      ## @param postgresql.external.connectionString.secretKeyRef [object] Secret ref for connection string.
      secretKeyRef: { name: "", key: "" }

  image:
    # Use the legacy image to deal with Bitnami's overall product deprecation
    repository: bitnamilegacy/postgresql

  # Authentication and database configuration
  auth:
    ## @param postgresql.auth.username [string, default: postgres] Database username.
    username: postgres
    # Setting the password directly here is NOT recommended, and should ONLY be done in
    # local development environments. If running in a production environment, or just
    # anywhere but local development, you should set the password via a secret manager
    # via the `existingSecret` field.
    ## @param postgresql.auth.password [string] Database password (do not set inline in production).
    password: ""
    ## @param postgresql.auth.database [string, default: mydb] Database name.
    database: mydb
    ## @param postgresql.auth.existingSecret [string] Existing secret for DB credentials.
    existingSecret: "" # See: https://kubespec.dev/v1/Secret
    secretKeys:
      ## @param postgresql.auth.secretKeys.usernameKey [string, default: username] Username key.
      usernameKey: "username"
      ## @param postgresql.auth.secretKeys.adminPasswordKey [string, default: postgres-password] Admin password key.
      adminPasswordKey: "postgres-password"
      ## @param postgresql.auth.secretKeys.passwordKey [string, default: password] Password key.
      passwordKey: "password"
      ## @param postgresql.auth.secretKeys.databaseKey [string, default: database] Database key.
      databaseKey: "database"

  # PostgreSQL container image
  image:
    ## @param postgresql.image.tag [string, default: 16.6.0-debian-12-r2] PostgreSQL image tag.
    tag: 16.6.0-debian-12-r2

  # Data directory path
  ## @param postgresql.postgresqlDataDir [string, default: /var/lib/postgresql/data/pgdata] Data dir path.
  postgresqlDataDir: /var/lib/postgresql/data/pgdata

  # Volume permissions initialization
  volumePermissions:
    ## @param postgresql.volumePermissions.enabled [default: true] Enable volume permissions init.
    enabled: true

  # Primary database configuration
  primary:
    # Persistent storage configuration
    # See: https://kubespec.dev/v1/PersistentVolumeClaim
    ## @extra postgresql.primary.persistence Persistent volume for primary.
    ## @param postgresql.primary.persistence.enabled [default: true] Enable persistence.
    ## @param postgresql.primary.persistence.mountPath [string, default: /var/lib/postgresql/data] Mount path.
    ## @param postgresql.primary.persistence.size [string, default: 20Gi] PVC size.
    ## @param postgresql.primary.persistence.storageClass [string] Storage class.
    persistence:
      enabled: true
      # Migration note: if you are migrating from a `langwatch-helm` version before 1.0.0, you can set
      # this property and value in your values.yaml file, and you will not lose any data
      # from the previous deployment

      # existingClaim: "data-langwatch-postgres-0"
      mountPath: /var/lib/postgresql/data
      size: 20Gi
      storageClass: ""

      # Health check probes
      # See: https://kubespec.dev/v1/Pod#spec.containers.readinessProbe
      ## @extra postgresql.primary.persistence.readinessProbe Readiness probe toggle.
      ## @param postgresql.primary.persistence.readinessProbe.enabled [default: true] Enable readiness probe.
      readinessProbe:
        enabled: true
      # See: https://kubespec.dev/v1/Pod#spec.containers.livenessProbe
      ## @extra postgresql.primary.persistence.livenessProbe Liveness probe toggle.
      ## @param postgresql.primary.persistence.livenessProbe.enabled [default: true] Enable liveness probe.
      livenessProbe:
        enabled: true

  # Resource requirements for PostgreSQL
  # See: https://kubespec.dev/v1/Pod#spec.containers.resources
  ## @extra postgresql.resources Resource requests and limits.
  ## @param postgresql.resources.requests.cpu [string, default: 250m] Requested CPU.
  ## @param postgresql.resources.requests.memory [string, default: 512Mi] Requested memory.
  ## @param postgresql.resources.limits.cpu [string, default: 1000m] CPU limit.
  ## @param postgresql.resources.limits.memory [string, default: 1Gi] Memory limit.
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

# =============================================================================
# OpenSearch Configuration
# =============================================================================
# Search and analytics engine for trace data and logs
## @section OpenSearch
opensearch:
  # Whether to manage OpenSearch via this chart or use external instance
  ## @param opensearch.chartManaged [default: true] Manage OpenSearch via this chart.
  chartManaged: true

  # External search engine configuration (when chartManaged: false)
  external:
    # Search engine to use. Options: opensearch (default), elasticsearch, quickwit
    # When set to 'opensearch', enables OpenSearch integration
    # When set to 'elasticsearch', enables Elasticsearch integration
    # When set to 'quickwit', enables Quickwit integration
    ## @param opensearch.external.engine [string, default: opensearch] Search engine type (opensearch|elasticsearch|quickwit).
    engine: opensearch
    nodeUrl:
      ## @param opensearch.external.nodeUrl.value [string] External engine node URL.
      value: ""
      ## @param opensearch.external.nodeUrl.secretKeyRef [object] Secret ref for external engine node URL.
      secretKeyRef: { name: "", key: "" }
    apiKey:
      ## @param opensearch.external.apiKey.value [string] API key for external engine.
      value: ""
      ## @param opensearch.external.apiKey.secretKeyRef [object] Secret ref for external engine API key.
      secretKeyRef: { name: "", key: "" }

  # Authentication configuration
  auth:
    ## @param opensearch.auth.adminPassword [string] Admin password (autogenerated if empty when chart-managed).
    adminPassword: "" # Will be auto-generated if not provided
    ## @param opensearch.auth.existingSecret [string] Existing secret for admin credentials.
    existingSecret: "" # Use existing secret for production
    secretKeys:
      ## @param opensearch.auth.secretKeys.adminPasswordKey [string, default: admin-password] Password key name.
      adminPasswordKey: "admin-password"

  # OpenSearch cluster configuration
  ## @param opensearch.replicas [default: 1] Number of OpenSearch replicas.
  replicas: 1

  # OpenSearch configuration file
  ## @extra opensearch.config OpenSearch config file content.
  config:
    ## @param opensearch.config.opensearch.yml [string] Contents of opensearch.yml.
    opensearch.yml: |
      network.host: 0.0.0.0
      discovery.type: single-node
      plugins.security.disabled: true

  # Additional environment variables
  # See: https://kubespec.dev/v1/Pod#spec.containers.env
  ## @extra opensearch.extraEnvs Additional environment variables.
  ## @skip opensearch.extraEnvs Skip documenting example environment variable item.
  extraEnvs:
    - name: cluster.initial_master_nodes
      value: "" # force empty so the setting is gone

  # Persistent storage configuration
  # See: https://kubespec.dev/v1/PersistentVolumeClaim
  ## @extra opensearch.persistence Persistent storage configuration.
  ## @param opensearch.persistence.enabled [default: true] Enable persistence.
  ## @param opensearch.persistence.size [string, default: 20Gi] PVC size.
  ## @param opensearch.persistence.accessModes [array, default: [ReadWriteOnce]] Access modes.
  persistence:
    enabled: true
    size: 20Gi
    accessModes: [ReadWriteOnce]
    # storageClass: <set if you don't have a default>

  # Resource requirements for OpenSearch
  # See: https://kubespec.dev/v1/Pod#spec.containers.resources
  ## @extra opensearch.resources Resource requests and limits.
  ## @param opensearch.resources.requests.cpu [string, default: 1000m] Requested CPU.
  ## @param opensearch.resources.requests.memory [string, default: 2Gi] Requested memory.
  ## @param opensearch.resources.limits.cpu [string, default: 2] CPU limit.
  ## @param opensearch.resources.limits.memory [string, default: 4Gi] Memory limit.
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2
      memory: 4Gi

# =============================================================================
# Redis Configuration
# =============================================================================
# In-memory data store for caching and session management
## @section Redis
redis:
  # Whether to manage Redis via this chart or use external instance
  ## @param redis.chartManaged [default: true] Manage Redis via this chart.
  chartManaged: true

  # External Redis configuration (when chartManaged: false)
  external:
    # Redis architecture to use. Options: standalone (default), cluster
    # When set to 'standalone', enables single Redis instance
    # When set to 'cluster', enables Redis cluster mode
    ## @param redis.external.architecture [string, default: standalone] Redis architecture for external mode.
    architecture: standalone
    connectionString:
      ## @param redis.external.connectionString.value [string] Redis connection string URL.
      value: ""
      # See: https://kubespec.dev/v1/Secret
      ## @param redis.external.connectionString.secretKeyRef [object] Secret ref for connection string.
      secretKeyRef: { name: "", key: "" }

  image:
    # Use the legacy image to deal with Bitnami's overall product deprecation
    repository: bitnamilegacy/redis

  # Authentication configuration
  auth:
    ## @param redis.auth.enabled [default: true] Enable Redis AUTH.
    enabled: true
    ## @param redis.auth.password [string] Redis password (autogenerated if empty when chart-managed).
    password: "" # Will be auto-generated if not provided
    ## @param redis.auth.existingSecret [string] Existing secret for Redis password.
    existingSecret: "" # Use existing secret for production
    secretKeys:
      ## @param redis.auth.secretKeys.passwordKey [string, default: password] Password key name.
      passwordKey: "password"

  # Redis architecture (single instance)
  # Redis architecture to use. Options: standalone (default), cluster
  # When set to 'standalone', enables single Redis instance
  # When set to 'cluster', enables Redis cluster mode
  ## @param redis.architecture [string, default: standalone] Redis architecture (standalone|cluster).
  architecture: standalone

  # Master node configuration
  master:
    # Persistent storage configuration
    # See: https://kubespec.dev/v1/PersistentVolumeClaim
    ## @extra redis.master.persistence Persistent volume for master.
    ## @param redis.master.persistence.enabled [default: true] Enable persistence.
    ## @param redis.master.persistence.size [string, default: 10Gi] PVC size.
    ## @param redis.master.persistence.storageClass [string] Storage class.
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""

    # Resource requirements for Redis
    # See: https://kubespec.dev/v1/Pod#spec.containers.resources
    ## @extra redis.master.resources Resource requests and limits.
    ## @param redis.master.resources.requests.cpu [string, default: 250m] Requested CPU.
    ## @param redis.master.resources.requests.memory [string, default: 256Mi] Requested memory.
    ## @param redis.master.resources.limits.cpu [string, default: 500m] CPU limit.
    ## @param redis.master.resources.limits.memory [string, default: 512Mi] Memory limit.
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
