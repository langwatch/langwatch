# Global configuration
global:
  env: production
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  scheduling:
    nodeSelector: {}
    affinity: {}
    tolerations: []
  monitoring:
    enabled: false
    prometheusAnnotations: true


# Image configurations
images:
  app:
    repository: langwatch/langwatch
    tag: latest
    pullPolicy: Always
  langwatch_nlp:
    repository: langwatch/langwatch_nlp
    tag: latest
    pullPolicy: Always
  langevals:
    repository: langwatch/langevals
    tag: latest
    pullPolicy: Always
  postgres:
    repository: postgres
    tag: "16"
    pullPolicy: IfNotPresent
  redis:
    repository: redis
    tag: alpine
    pullPolicy: IfNotPresent
  opensearch:
    repository: opensearchproject/opensearch
    tag: 2.17.1
    pullPolicy: IfNotPresent


# Service configurations
app:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5560
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1024Mi
  env:
    SKIP_ENV_VALIDATION: "true"
    DISABLE_PII_REDACTION: "true"
    DATABASE_URL: "postgresql://prisma:prisma@{{ .Release.Name }}-postgres:5432/mydb?schema=mydb"
    ELASTICSEARCH_NODE_URL: "http://{{ .Release.Name }}-opensearch:9200"
    IS_OPENSEARCH: "true"
    REDIS_URL: "redis://{{ .Release.Name }}-redis:6379"
    LANGWATCH_NLP_SERVICE: "http://{{ .Release.Name }}-langwatch-nlp:5561"
    LANGEVALS_ENDPOINT: "http://{{ .Release.Name }}-langevals:5562"
    # User provided environment variables
    BASE_HOST: "http://localhost:5560"
    NEXTAUTH_URL: "http://localhost:5560"
    NEXTAUTH_SECRET: ""  # Users must provide this values
    API_TOKEN_JWT_SECRET: ""  # Users must provide this values
    # SENDGRID_API_KEY: ""  # Optional


langwatch_nlp:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5561
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  env:
    LANGWATCH_ENDPOINT: "http://{{ .Release.Name }}-app:5560"
    # For when running on minikube on Mac OS
    # STUDIO_RUNTIME: "async"

langevals:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5562
  resources:
    requests:
      cpu: 500m
      memory: 4096Mi
    limits:
      cpu: 1000m
      memory: 6144Mi

postgres:
  service:
    type: ClusterIP
    port: 5432
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  env:
    POSTGRES_DB: mydb
    POSTGRES_USER: prisma
    POSTGRES_PASSWORD: prisma
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""

redis:
  service:
    type: ClusterIP
    port: 6379
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  persistence:
    enabled: true
    size: 5Gi
    storageClass: ""

opensearch:
  service:
    type: ClusterIP
    ports:
      - name: http
        port: 9200
      - name: transport
        port: 9600
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  env:
    discovery.type: single-node
    DISABLE_SECURITY_PLUGIN: "true"
    _JAVA_OPTIONS: "-XX:UseSVE=0"
    plugins.anomaly_detection.enabled: "false"
    plugins.flow_framework.enabled: "false"
    plugins.security_analytics.ioc_finding_enabled: "false"
    plugins.sql.enabled: "false"
    plugins.rollup.enabled: "false"
    OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m -XX:+UseG1GC -XX:-UseSerialGC -XX:G1ReservePercent=25 -XX:+AlwaysPreTouch -XX:InitiatingHeapOccupancyPercent=30"
    cluster.routing.allocation.disk.threshold_enabled: "false"
    bootstrap.memory_lock: "false"
    cluster.routing.allocation.disk.watermark.low: "95%"
    cluster.routing.allocation.disk.watermark.high: "96%"
    cluster.routing.allocation.disk.watermark.flood_stage: "97%"
    cluster.info.update.interval: "1m"
    OPENSEARCH_INITIAL_ADMIN_PASSWORD: "Some-random-password-which-is-greater-than-16-chars-long~"
    node.store.allow_mmap: "false"
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65536
      hard: 65536


# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
