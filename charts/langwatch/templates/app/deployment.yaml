apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-app
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "langwatch.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-app
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-app
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.global.monitoring.enabled }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.app.service.port }}"
      {{- end }}
    spec:
      # Pod security context
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      # Node selection
      {{- with .Values.global.scheduling.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.scheduling.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.scheduling.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-app
          securityContext:
            {{- toYaml .Values.global.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.images.app.repository }}:{{ .Values.images.app.tag }}"
          imagePullPolicy: {{ .Values.images.app.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.service.port }}
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: {{ include "langwatch.postgres.databaseUrl" . | quote }}
            - name: REDIS_URL
              value: {{ include "langwatch.redis.connectionUrl" . | quote }}
            - name: ELASTICSEARCH_NODE_URL
              value: {{ include "langwatch.opensearch.url" . | quote }}
            {{- range $key, $value := .Values.app.env }}
            {{- if and (ne $key "DATABASE_URL") (ne $key "REDIS_URL") (ne $key "ELASTICSEARCH_NODE_URL") }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
      volumes:
        - name: tmp-dir
          emptyDir: {}
