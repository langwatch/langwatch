name: langwatch-app-ci

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "langwatch/**"
      - ".github/workflows/langwatch-app-ci.yml"
      - ".github/.release-please-manifest.json"
  workflow_dispatch:

env:
  NODE_ENV: "test"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "langwatch/package-lock.json"

      - name: Setup LangWatch Server
        uses: ./.github/actions/langwatch-server
        with:
          working-directory: 'langwatch'
          port: '3000'
          setup-database: 'false'

      - name: Run typecheck
        working-directory: langwatch
        run: npm run typecheck

  test-unit:
    env:
      # Required environment variables for integration tests
      DATABASE_URL: "postgresql://langwatch_ci:ci_password@localhost:5432/langwatch_test"
      BASE_HOST: "localhost:3000"
      NEXTAUTH_SECRET: "nextauth-secret-for-ci-testing"
      NEXTAUTH_URL: "http://localhost:3000"
      API_TOKEN_JWT_SECRET: "api-jwt-secret-for-ci-testing"
      ELASTICSEARCH_NODE_URL: "http://localhost:9200"
      REDIS_URL: "redis://localhost:6379"
      BUILD_TIME: "true"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "langwatch/package-lock.json"

      - name: Setup LangWatch Server
        uses: ./.github/actions/langwatch-server
        with:
          working-directory: 'langwatch'
          port: '3000'
          setup-database: 'false'

      - name: Run unit tests
        working-directory: langwatch
        run: npm run test:unit -- --run --bail=1

  test-integration:
    env:
      # Required environment variables for integration tests
      DATABASE_URL: "postgresql://langwatch_ci:ci_password@localhost:5432/langwatch_test"
      BASE_HOST: "localhost:3000"
      NEXTAUTH_SECRET: "nextauth-secret-for-ci-testing"
      NEXTAUTH_URL: "http://localhost:3000"
      API_TOKEN_JWT_SECRET: "api-jwt-secret-for-ci-testing"
      ELASTICSEARCH_NODE_URL: "http://localhost:9200"
      REDIS_URL: "redis://localhost:6379"
      BUILD_TIME: "true"

    runs-on: ubuntu-latest

    # Services configuration (shared with sdk-javascript-ci.yml - keep in sync)
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: langwatch_ci
          POSTGRES_PASSWORD: ci_password
          POSTGRES_DB: langwatch_test
        options: >-
          --health-cmd "pg_isready -U langwatch_ci"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "langwatch/package-lock.json"

      - name: Setup LangWatch Server
        uses: ./.github/actions/langwatch-server
        with:
          working-directory: 'langwatch'
          port: '3000'
          setup-database: 'false'

      - name: Setup LangWatch Server
        uses: ./.github/actions/langwatch-server
        with:
          working-directory: 'langwatch'
          port: '3000'
          setup-database: 'true'

      - name: Run integration tests
        working-directory: langwatch
        run: npm run test:integration

  e2e:
    runs-on: ubuntu-latest

    env:
      # LangWatch server config
      DATABASE_URL: "postgresql://langwatch_ci:ci_password@localhost:5432/langwatch_test"
      BASE_HOST: "localhost:3000"
      NEXTAUTH_SECRET: "nextauth-secret-for-ci-testing"
      NEXTAUTH_URL: "http://localhost:3000"
      API_TOKEN_JWT_SECRET: "api-jwt-secret-for-ci-testing"
      ELASTICSEARCH_NODE_URL: "http://localhost:9200"
      REDIS_URL: "redis://localhost:6379"
      NODE_ENV: "test"
      # E2E test config
      E2E_LANGWATCH_API_KEY: ${{ secrets.E2E_LANGWATCH_API_KEY }}
      E2E_LANGWATCH_ENDPOINT: "http://localhost:3000"
      E2E_TIMEOUT: 120000
      E2E_POLL_TIMEOUT: 120000

    defaults:
      run:
        working-directory: langwatch

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "langwatch/package-lock.json"

      # Setup and start LangWatch server with all services and prerequisites
      - name: Setup LangWatch Server
        uses: ./.github/workflows/reusable/langwatch-server-setup.yml
        with:
          working-directory: 'langwatch'
          port: '3000'
          setup-database: true

      - name: Run e2e tests
        run: npm run test:e2e

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup LangWatch Server
        uses: ./.github/actions/langwatch-server
        with:
          working-directory: 'langwatch'
          port: '3000'
          setup-database: 'false'

      - name: Cache Next.js
        id: next-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            langwatch/.next/cache/webpack
            langwatch/.next/cache/swc
          key: ${{ runner.os }}-nextjs-${{ hashFiles('langwatch/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('langwatch/package-lock.json') }}-

      - name: Build
        working-directory: langwatch
        run: npm run build

      - name: Save Next.js cache
        if: steps.next-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            langwatch/.next/cache/webpack
            langwatch/.next/cache/swc
          key: ${{ steps.next-cache.outputs.cache-primary-key }}
